<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang-logging on Hi Folks</title><link>https://huanggze.github.io/series/golang-logging/</link><description>Recent content in golang-logging on Hi Folks</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© huanggze 2021</copyright><lastBuildDate>Wed, 06 Apr 2022 21:23:09 +0800</lastBuildDate><atom:link href="https://huanggze.github.io/series/golang-logging/index.xml" rel="self" type="application/rss+xml"/><item><title>Go 日志：klog</title><link>https://huanggze.github.io/posts/go-logging-part1/</link><pubDate>Wed, 06 Apr 2022 21:23:09 +0800</pubDate><guid>https://huanggze.github.io/posts/go-logging-part1/</guid><description>klog 是 K8s 社区维护的 logging 库，支持在程序命令行注册以下 flag1：
log_file：输出到日志文件； log_file_max_size：日志文件最大大小（单位：mb），如果超过最大值则会擦除日志文件全部内容，并从头开始写日志。未设置最大值时，无限制； logtostderr：是否输出到标准错误输出，如果想输出到文件，改值应设为 false； skip_log_headers：忽略记录日志元信息； v：日志等级 示例 1：手动/自动输出日志到文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 func main() { fs := flag.NewFlagSet(&amp;#34;klog&amp;#34;, flag.ExitOnError) // 注册 flag klog.InitFlags(fs) fs.Set(&amp;#34;skip_log_headers&amp;#34;, &amp;#34;true&amp;#34;) // 解析 flag fs.Parse(os.Args[1:]) klog.Info(&amp;#34;nice to meet you&amp;#34;) klog.ErrorS(errors.New(&amp;#34;oops&amp;#34;), &amp;#34;noooo&amp;#34;) // 手动刷新日志记录到文件 klog.Flush() // 或者每 5s 自动 flush // time.Sleep(6 * time.</description></item></channel></rss>